--Query 1: to determine date for the first and last order
select min(date) AS first_order_date,
       max(date) AS last_order_date
from transactions;

--Query 2: to determine the yonungest and oldest consumer and create age groups.
select min(age) AS min_age,
       max(age) AS max_age
from transactions;

--Query 3: to create age buckets (age groups) using the CASE Statement and analyse their spending behaviour.
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       price_per_unit,
       quantity,
       total_amount,
       year(date) AS year,
       monthname(date)AS month_name,
       day(date) AS day_of_the_month,
CASE
    When age BETWEEN '18' AND '25' THEN '18-25'
    When age BETWEEN '26' AND '35' THEN '26-35'
    When age BETWEEN '36' AND '45' THEN '36-45'
    When age BETWEEN '46' AND '55' THEN '46-55'
    When age>=56 THEN '56-64'
END AS AgeGroup
from transactions;

--Query 4: to perform quarterly analysis of total amount spent per category
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       price_per_unit,
       quantity,
       total_amount,
       year(date) AS year,
       monthname(date)AS month_name,
       day(date) AS day_of_the_month,
CASE
    When date BETWEEN '2023-01-01' AND '2023-03-31' THEN 'Quarter 1'
    When date BETWEEN '2023-04-01' AND '2023-06-30' THEN 'Quarter 2'
    When date BETWEEN '2023-07-01' AND '2023-09-30' THEN 'Quarter 3'
    When date BETWEEN '2023-10-01' AND '2023-12-31' THEN 'Quarter 4'
END AS Time_of_The_Year
from transactions
order by Time_of_The_Year;

-- Query 5: analyse total amount spent per product category
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       price_per_unit,
       quantity,
       total_amount,
       year(date) AS year,
       monthname(date)AS month_name,
       day(date) AS day_of_the_month
from transactions
group by product_category;

Query 6: breakdown of age into age groups and spending behaviour of males per age group:
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       price_per_unit,
       quantity,
       total_amount,
       year(date) AS year,
       monthname(date)AS month_name,
       day(date) AS day_of_the_month,
CASE
    When age BETWEEN '18' AND '25' THEN '18-25'
    When age BETWEEN '26' AND '35' THEN '26-35'
    When age BETWEEN '36' AND '45' THEN '36-45'
    When age BETWEEN '46' AND '55' THEN '46-55'
    When age>=56 THEN '56-64'
END AS Age_Group
from transactions
where gender='male';

-- Query 7: to determine average price spent per category, further broken down to average price per category by gender:
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       avg(price_per_unit) AS avg_unit_price,
       quantity,
       total_amount,
from TRANSACTIONS
group by transaction_id, customer_id,product_category,age,gender,date,quantity,total_amount
order by avg_unit_price DESC;

-- Query 8: average price per category by gender (where gender='female')
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       avg(price_per_unit) AS avg_unit_price,
       quantity,
       total_amount,
from TRANSACTIONS
where gender='female'
group by transaction_id, customer_id,product_category,age,gender,date,quantity,total_amount
order by avg_unit_price DESC;

-- Query 9: to extract year, month of the year and date of the month from the date column given.
select transaction_id,
       customer_id,
       product_category,
       date,
       age,
       gender,
       price_per_unit,
       quantity,
       total_amount,
       year(date) AS year,
       monthname(date)AS month_name,
       day(date) AS day_of_the_month
from transactions;

